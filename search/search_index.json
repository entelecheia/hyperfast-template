{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Hyperfast Template","text":"<p>A versatile project template designed to accelerate development and streamline project management using best practices and modern tools.</p> <ul> <li>Documentation: https://hyperfast-template.entelecheia.ai</li> <li>GitHub: https://github.com/entelecheia/hyperfast-template</li> </ul> <p>The 'Hyperfast Template' is a comprehensive and customizable template designed to help developers kick-start their projects with efficiency and ease. This template incorporates numerous features and tools, including automated changelog, semantic versioning, continuous integration, and documentation support. In addition, it integrates essential code formatting, styling, and quality assurance tools, such as EditorConfig, ESLint, Prettier, and pre-commit. By utilizing the Hyperfast Template, developers can quickly set up new projects or inject the template into existing ones, ensuring consistency, quality, and maintainability across the entire development process.</p>"},{"location":"#changelog","title":"Changelog","text":"<p>See the CHANGELOG for more information.</p>"},{"location":"#contributing","title":"Contributing","text":"<p>Contributions are welcome! Please see the contributing guidelines for more information.</p>"},{"location":"#license","title":"License","text":"<p>This project is released under the MIT License.</p> <p>Check out the usage section for further information.</p>"},{"location":"features/","title":"Features","text":"<ul> <li> Hyperfast rendering of the template into a new project using Copier</li> <li> Project management with Make</li> <li> Support for Conventional Commits and Semantic Versioning</li> <li> Automated changelog with semantic release</li> <li> Automated semantic versioning with semantic release</li> <li> Automated labeling for pull requests based on Conventional Commits using Conventional Release Labels</li> <li> Continuous integration with GitHub Actions</li> <li> Automated dependency updates with Dependabot</li> <li> Documentation using MkDocs and Read the Docs</li> <li> Consistent coding styles across different text editors with EditorConfig and its configuration file <code>.editorconfig</code></li> <li> Enforced coding standards and best practices for JavaScript using ESLint</li> <li> Consistent code style using Prettier and its configuration file <code>.prettierrc</code></li> <li> Ensured code quality with pre-commit and its configuration file <code>.pre-commit-config.yaml</code></li> <li> Simplified Git hooks management with Husky</li> <li> Assisted commit message creation with Commitizen for standardized commit messages</li> </ul>"},{"location":"features/#semantic-release","title":"Semantic Release","text":""},{"location":"features/#commit-message-format","title":"Commit Message Format","text":"<p>Semantic-release relies on commit messages to determine the impact of changes in the codebase on users. By adhering to standardized commit message conventions, semantic-release can automatically calculate the next semantic version number, generate a changelog, and publish the release.</p> <p>Tools such as commitizen or commitlint can assist contributors in maintaining valid commit messages.</p> <p>The table below demonstrates how different commit messages result in specific release types when <code>semantic-release</code> runs (using the default configuration):</p> Commit message Release type <code>fix(pencil): stop graphite breaking when too much pressure applied</code> Fix Release <code>feat(pencil): add 'graphiteWidth' option</code> Feature Release <code>perf(pencil): remove graphiteWidth option</code><code>BREAKING CHANGE: The graphiteWidth option has been removed.</code><code>The default graphite width of 10mm is always used for performance reasons.</code> Breaking Release  (Note that the <code>BREAKING CHANGE:</code> token must be in the footer of the commit)"},{"location":"features/#automation-with-ci","title":"Automation with CI","text":"<p>Semantic-release is designed to run on a Continuous Integration (CI) environment after every successful build on the release branch. This approach ensures that no human intervention is required during the release process, making releases objective and emotionless.</p>"},{"location":"features/#triggering-a-release","title":"Triggering a Release","text":"<p>Whenever a new commit is added to one of the release branches (e.g., <code>main</code>, <code>next</code>, or <code>beta</code>) through <code>git push</code>, merging a pull request, or merging from another branch, a CI build is triggered. This build executes the <code>semantic-release</code> command, initiating a release if there are any changes to the codebase that affect the package's functionality since the last release.</p>"},{"location":"usage/","title":"Usage","text":""},{"location":"usage/#quickstart","title":"Quickstart","text":"<p>The \"Hyperfast Template\" is designed to help you create and manage your projects efficiently. There are two ways to use this project:</p> <ol> <li>Create a new project on your local machine using Copier.</li> <li>Inject the Hyperfast Template into an existing project.</li> </ol>"},{"location":"usage/#i-create-a-new-project-with-copier","title":"I. Create a New Project with Copier","text":"<ol> <li>Install Copier using the following command:    <pre><code>pipx install copier\n</code></pre></li> <li>To create a new project, run:    <pre><code>copier copy --trust gh:entelecheia/hyperfast-template path/to/destination\n</code></pre></li> <li>Start working on your new project!</li> </ol>"},{"location":"usage/#ii-inject-the-template-into-an-existing-project","title":"II. Inject the Template into an Existing Project","text":"<ol> <li>Install Copier if you haven't already:    <pre><code>pipx install copier\n</code></pre></li> <li>Navigate to the root of your existing project, then run:    <pre><code>copier copy --trust gh:entelecheia/hyperfast-template .\n</code></pre></li> <li>Continue working on your project with the added benefits of the Hyperfast Template.</li> </ol>"}]}